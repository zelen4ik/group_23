Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.
                        инициализируемся git init
 4. Создать файл “new.json”: touch new.json
 5. Добавить файл под гит. : git add new.json
 6. Закоммитить файл. : git commit -m "add new.json file"
 7. Отправить файл на внешний GitHub репозиторий. : git push
 8. Создать файлы new2.json, new2.xml, new2.txt : touch new2.json new2.xml new2.txt
 9. Добавить файлы под гит. : git add .
 10. Закоммитить файлы. : git commit -m "add new2.json,xml,txt files"
 11. Отправить файлы на внешний GitHub репозиторий. : git push
 12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).: Синтаксис обычный текстовый формат
 13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.:
Синтаксис JSON выводится из JavaScript синтаксиса объекта обозначения:
-Данные в пар имя / значение
-Данные разделены запятыми
-Фигурные скобки держать объекты
-Квадратные скобки держать массивы
 14. Добавить и закоммитить “new2.txt” одной строчкой. :git add new2.txt && git commit -am "comment" 
 15. Добавить и закоммитить “new2.json” одной строчкой.:git add new2.json && git commit -am "comment"
 16. Отправить изменения на внешний репозиторий. : git push
 17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.:
Синтаксис используется теговый
 18. Добавить и закоммитить “new2.xml” одной строчкой. git add new2.xml && git commit -am "comment"
 19. Отправить изменения на внешний репозиторий. : git push
 20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.:cd .., cd HWterminal, mv ./QA_23/HW_terminal ./group_23/, git add ., git commit -m "HWterminal folder added", git push
 21. В веб интерфейсе GitHub создать файл new3.txt. : в GitHub нажать на Add file , create new file 
 22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
в github нажать на файл new3.txt затем edit this file вносим изменения
 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе. 
затем Commit changes и жмем кнопку
 24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) 
git pull, git status,
 25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
в github нажать на файл new3.json затем edit this file вносим изменения
 26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
затем Commit changes и жмем кнопку
 27. Синхронизировать внешний и локальный репозитории : затем Commit changes и жмем кнопку
git pull, git status, 
 28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
в github нажать на файл new3.xml затем edit this file вносим изменения
 29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
затем Commit changes и жмем кнопку
 30. Синхронизировать внешний и локальный репозитории 
git pull, git status, 
Данные для заполнения и редактирования файлов можете использовать любые, не обязательно свои.